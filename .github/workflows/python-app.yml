# MoodleClaude CI/CD Pipeline
# Tests the Moodle Course Creation from Claude Chats integration

name: MoodleClaude Tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"

    - name: Install dependencies
      run: |
        uv sync --extra test --extra dev

    - name: Verify requests is available
      run: |
        uv run python -c "import requests; print(f'✅ requests {requests.__version__} available')"

    - name: Run unit tests
      run: |
        uv run pytest tests/unit/ -v --tb=short

    - name: Run integration tests
      run: |
        uv run pytest tests/integration/ -v --tb=short

    - name: Test import of main modules
      run: |
        uv run python -c "import enhanced_moodle_claude; print('✅ enhanced_moodle_claude imported successfully')"
        uv run python -c "import mcp_server; print('✅ mcp_server imported successfully')"
        uv run python -c "import config; print('✅ config imported successfully')"

  lint:
    runs-on: ubuntu-latest
    continue-on-error: true  # Don't fail the entire workflow if linting fails

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: "3.12"

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"

    - name: Install dependencies
      run: |
        uv sync --extra dev

    - name: Lint with flake8
      run: |
        uv run flake8 --max-line-length=100 --ignore=E203,W503 --exclude=.venv,venv_e2e --statistics .
