# Pre-commit hooks for MoodleClaude
# See https://pre-commit.com for more information

repos:
  # Standard pre-commit hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: trailing-whitespace
        args: [--markdown-linebreak-ext=md]
      - id: end-of-file-fixer
      - id: check-yaml
        args: [--allow-multiple-documents]
      - id: check-json
      - id: check-added-large-files
        args: [--maxkb=500]
      - id: check-merge-conflict
      - id: debug-statements
      - id: check-executables-have-shebangs

  # Python code formatting
  - repo: https://github.com/psf/black
    rev: 23.7.0
    hooks:
      - id: black
        language_version: python3
        args: [--line-length=88]

  # Python import sorting
  - repo: https://github.com/pycqa/isort
    rev: 5.12.0
    hooks:
      - id: isort
        args: [--profile=black, --line-length=88]

  # Python linting
  - repo: https://github.com/pycqa/flake8
    rev: 6.0.0
    hooks:
      - id: flake8
        args: [--max-line-length=88, --extend-ignore=E203,W503]
        additional_dependencies:
          - flake8-bugbear
          - flake8-docstrings
          - flake8-import-order

  # Security scanning
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: [-r, ., -x, tests/,venv/,.venv/]
        exclude: ^tests/

  # Dockerfile linting
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint-docker
        args: [--ignore, DL3008, --ignore, DL3009]

  # YAML linting
  - repo: https://github.com/adrienverge/yamllint
    rev: v1.32.0
    hooks:
      - id: yamllint
        args: [-d, relaxed]

  # MoodleClaude specific hooks
  - repo: local
    hooks:
      # Bug fix validation
      - id: validate-bugfixes
        name: Validate Bug Fixes
        entry: python
        args: [tools/validate_bugfixes.py]
        language: system
        files: ^(setup/setup_moodleclaude_v3_fixed\.py|src/core/working_mcp_server\.py|tools/.*\.py)$
        pass_filenames: false

      # MCP server syntax check
      - id: mcp-server-syntax
        name: MCP Server Syntax Check
        entry: python
        args: [-m, py_compile, src/core/working_mcp_server.py]
        language: system
        files: ^src/core/working_mcp_server\.py$
        pass_filenames: false

      # Setup script validation
      - id: setup-script-validation
        name: Setup Script Validation
        entry: python
        args: [-c, "exec(open('setup/setup_moodleclaude_v3_fixed.py').read())"]
        language: system
        files: ^setup/setup_moodleclaude_v3_fixed\.py$
        pass_filenames: false

      # Documentation sync check
      - id: docs-sync-check
        name: Documentation Sync Check
        entry: bash
        args: [-c, 'if [ -f "BUGFIX_DOCUMENTATION.md" ]; then echo "✅ Bug fix documentation exists"; else echo "❌ Bug fix documentation missing"; exit 1; fi']
        language: system
        files: ^(BUGFIX_DOCUMENTATION\.md|setup/.*\.py|src/core/.*\.py)$
        pass_filenames: false

      # Token security check
      - id: token-security-check
        name: Token Security Check
        entry: bash
        args: [-c, 'if grep -r "MOODLE.*TOKEN.*=" --include="*.py" --include="*.yml" . | grep -v "test" | grep -v "example" | grep -v "placeholder"; then echo "⚠️ Potential hardcoded tokens found"; exit 1; fi']
        language: system
        pass_filenames: false

      # Quick smoke test
      - id: quick-smoke-test
        name: Quick Smoke Test
        entry: python
        args: [-c, "
import sys, os
sys.path.insert(0, '.')
try:
    # Test basic imports
    exec(open('src/core/working_mcp_server.py').read())
    print('✅ MCP server imports successfully')
except Exception as e:
    print(f'❌ MCP server import failed: {e}')
    sys.exit(1)
"]
        language: system
        files: ^src/core/working_mcp_server\.py$
        pass_filenames: false

# Global configuration
default_language_version:
  python: python3

# Exclude patterns
exclude: |
  (?x)^(
    \.venv/.*|
    venv/.*|
    \.git/.*|
    __pycache__/.*|
    \.pytest_cache/.*|
    .*\.pyc|
    .*\.pyo|
    .*\.egg-info/.*|
    build/.*|
    dist/.*|
    .*backup.*|
    .*\.backup\..*
  )$